# Run like: cargo make [entry task] [app name]

# TODO - cull in Duckscript: https://github.com/sagiegurari/duckscript/blob/master/docs/sdk.md#stdcollectionsarraycontains

# Allowed app names:
# dev/scratch/001
# dev/showcase/001
# user
# admin
# jig/edit
# jig/play
# module/memory/edit
# module/memory/play
# module/poster/edit
# module/poster/play

###################
## Config        ##
###################

[config]
skip_core_tasks = true
default_to_workspace = false

[env]
DOCKER_BUILDKIT = "1"
CARGO_MAKE_SCRIPT_FORCE_PIPE_STDIN = true

env_files = ["../../.env"]

[tasks.local-port-main]
script_runner = "@duckscript"
script = '''
set_env APP_PORT 4104 
'''

[tasks.local-port-iframe]
script_runner = "@duckscript"
script = '''
set_env APP_PORT 4105 
'''

##########################
## ENTRY                ##
##########################


[tasks.sandbox]
script_runner = "@duckscript"
script = '''
set_env APP_NAME ${1} 
cm_run_task build-sandbox
cm_run_task deploy-sandbox
'''

[tasks.release]
script_runner = "@duckscript"
script = '''
set_env APP_NAME ${1} 
cm_run_task build-release
cm_run_task deploy-release
'''

[tasks.local-main]
script_runner = "@duckscript"
script = '''
set_env APP_NAME ${1} 
cm_run_task build-local-main
'''

[tasks.local-iframe]
script_runner = "@duckscript"
script = '''
set_env APP_NAME ${1} 
cm_run_task build-local-iframe
'''

[tasks.local-main-nomedia]
script_runner = "@duckscript"
script = '''
set_env APP_NAME ${1} 
cm_run_task build-local-main-nomedia
'''

[tasks.local-iframe-nomedia]
script_runner = "@duckscript"
script = '''
set_env APP_NAME ${1} 
cm_run_task build-local-iframe-nomedia
'''

#######################
## BUILD - SANDBOX ##
#######################
[tasks.build-sandbox]
run_task = {name = [
    "ci-deps",
    "sandbox-build-elements",
    "sandbox-build-app",
]}

[tasks.sandbox-build-elements]
script_runner = "@shell"
script = ["npm run build:sandbox"]
cwd = "../elements"

[tasks.sandbox-build-app]
script_runner = "@shell"
script = ["npm run build:sandbox"]

#######################
## BUILD - RELEASE   ##
#######################
[tasks.build-release]
run_task = {name = [
    "ci-deps",
    "release-build-elements",
    "release-build-app",
]}

[tasks.release-build-elements]
script_runner = "@shell"
script = ["npm run build:release"]
cwd = "../elements"

[tasks.release-build-app]
script_runner = "@shell"
script = ["npm run build:release"]

###################
## local ##
###################
[tasks.build-local-main]
run_task = {name = [
    "local-build-elements",
    "local-port-main",
    "local-prep-files",
    "local-start",
]}

[tasks.build-local-iframe]
run_task = {name = [
    "local-build-elements",
    "local-port-iframe",
    "local-prep-files",
    "local-start",
]}

[tasks.build-local-main-nomedia]
run_task = {name = [
    "local-build-elements",
    "local-port-main",
    "local-prep-files",
    "local-watch-app",
]}

[tasks.bild-local-iframe-nomedia]
run_task = {name = [
    "local-build-elements",
    "local-port-iframe",
    "local-prep-files",
    "local-watch-app",
]}

[tasks.local-prep-files]
script_runner = "@shell"
script = ["npm run local-dev-files"]
cwd = "../build-utils"

[tasks.local-build-elements]
script_runner = "@shell"
script = ["npm run build:local"]
cwd = "../elements"

[tasks.local-start]
run_task = { name = [
    "local-start-mediaserver",
    "local-watch-elements",
    "local-watch-app",
], fork = true, parallel = true }

[tasks.local-start-mediaserver]
script_runner = "@shell"
script = ["npm run local-media-server"]
cwd = "../build-utils"

[tasks.local-watch-elements]
script_runner = "@shell"
script = ["npm run watch"]
cwd = "../elements"

[tasks.local-watch-app]
script_runner = "@shell"
script = ["npm run build:watch"]

########################
## BUILD - CI DEPS    ##
########################
[tasks.ci-deps]
run_task = {name = [
    "npm-install-app",
    "npm-install-build-utils",
    "npm-install-elements",
    "npm-install-config",
    "ts-config-build"
]}

[tasks.npm-install-app]
script_runner = "@shell"
script = ["npm install"]

[tasks.npm-install-build-utils]
script_runner = "@shell"
script = ["npm install"]
cwd = "../build-utils"

[tasks.npm-install-elements]
script_runner = "@shell"
script = ["npm install"]
cwd = "../elements"

[tasks.npm-install-config]
script_runner = "@shell"
script = ["npm install"]
cwd = "../../config/typescript"

[tasks.ts-config-build]
script_runner = "@shell"
script = ["npm run build"]
cwd = "../../config/typescript"

############
## DEPLOY ## 
############

[tasks.deploy-sandbox]
script_runner = "@duckscript"
script = '''
app_name = get_env APP_NAME
gsutil -m rsync -d -r frontend/apps/dist/${app_name}/js gs://ji-cloud-sandbox-frontend-origin-eu-001/${app_name}/js
'''
cwd = "../.."

[tasks.deploy-release]
script_runner = "@duckscript"
script = '''
app_name = get_env APP_NAME
gsutil -m rsync -d -r frontend/apps/dist/${app_name}/js gs://ji-cloud-frontend-origin-eu-001/${app_name}/js
'''
cwd = "../.."